import { DeviceCodeInfo, InteractiveBrowserCredentialInBrowserOptions, InteractiveBrowserCredentialNodeOptions, TokenCredential } from "@azure/identity";
import KustoConnectionStringBuilderBase from "./connectionBuilderBase.js";
export declare class KustoConnectionStringBuilder extends KustoConnectionStringBuilderBase {
    static readonly DefaultDatabaseName = "NetDefaultDB";
    static readonly SecretReplacement = "****";
    static withAadUserPasswordAuthentication(_connectionString: string, _userId: string, _password: string, _authorityId?: string): KustoConnectionStringBuilder;
    static withAadApplicationKeyAuthentication(_connectionString: string, _aadAppId: string, _appKey: string, _authorityId?: string): KustoConnectionStringBuilder;
    static withAadApplicationCertificateAuthentication(_connectionString: string, _aadAppId: string, _applicationCertificatePrivateKey?: string, _authorityId?: string, _applicationCertificateSendX5c?: boolean, _applicationCertificatePath?: string): KustoConnectionStringBuilder;
    static withAadDeviceAuthentication(_connectionString: string, _authorityId?: string, _deviceCodeCallback?: (response: DeviceCodeInfo) => void): KustoConnectionStringBuilder;
    static withSystemManagedIdentity(_connectionString: string, _authorityId?: string, _timeoutMs?: number): KustoConnectionStringBuilder;
    static withUserManagedIdentity(_connectionString: string, _msiClientId: string, _authorityId?: string, _timeoutMs?: number): KustoConnectionStringBuilder;
    static withAzLoginIdentity(_connectionString: string, _authorityId?: string, _timeoutMs?: number): KustoConnectionStringBuilder;
    static withAccessToken(connectionString: string, accessToken: string): KustoConnectionStringBuilder;
    static withTokenProvider(connectionString: string, tokenProvider: () => Promise<string>): KustoConnectionStringBuilder;
    static withUserPrompt(connectionString: string, interactiveCredentialOptions: InteractiveBrowserCredentialNodeOptions | InteractiveBrowserCredentialInBrowserOptions, timeoutMs?: number): KustoConnectionStringBuilder;
    static withTokenCredential(connectionString: string, credential: TokenCredential): KustoConnectionStringBuilder;
    static fromExisting(other: KustoConnectionStringBuilderBase): KustoConnectionStringBuilderBase;
}
export default KustoConnectionStringBuilder;
//# sourceMappingURL=connectionBuilder.browser.d.ts.map