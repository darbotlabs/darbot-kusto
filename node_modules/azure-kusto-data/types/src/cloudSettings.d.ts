export type CloudInfo = {
    LoginEndpoint: string;
    LoginMfaRequired: boolean;
    KustoClientAppId: string;
    KustoClientRedirectUri: string;
    KustoServiceResourceId: string;
    FirstPartyAuthorityUrl: string;
};
/**
 * This class holds data for all cloud instances, and returns the specific data instance by parsing the dns suffix from a URL
 */
declare class CloudSettings {
    METADATA_ENDPOINT: string;
    defaultCloudInfo: CloudInfo;
    cloudCache: {
        [kustoUri: string]: CloudInfo;
    };
    writeToCache(url: string, info?: CloudInfo): void;
    getFromCache: (kustoUri: string) => CloudInfo;
    deleteFromCache: (kustoUri: string) => boolean;
    getCloudInfoForCluster(kustoUri: string): Promise<CloudInfo>;
    private normalizeUrl;
    getAuthMetadataEndpointFromClusterUri(kustoUri: string): string;
    static getAuthorityUri(cloudInfo: CloudInfo, authorityId?: string): string;
}
declare const cloudSettings: CloudSettings;
export { cloudSettings as CloudSettings };
export default cloudSettings;
//# sourceMappingURL=cloudSettings.d.ts.map