{"version":3,"file":"clientRequestProperties.js","sourceRoot":"","sources":["../../src/clientRequestProperties.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { KustoHeaders } from \"./clientDetails.js\";\n\nconst SDK_API_VERSION = \"2024-12-12\"; // TODO: Update when new API version is released\n\nexport class ClientRequestProperties {\n    private _options: { [option: string]: any };\n    private _parameters: { [option: string]: any };\n    private _clientTimeOut?: number;\n    public clientRequestId: string | null;\n    public user: string | null;\n    public application: string | null;\n    public raw?: boolean;\n\n    constructor(options?: Record<string, unknown>, parameters?: Record<string, unknown>, clientRequestId?: string, user?: string, application?: string) {\n        this._options = options || {};\n        this._parameters = parameters || {};\n        this.clientRequestId = clientRequestId || null;\n        this.user = user || null;\n        this.application = application || null;\n    }\n\n    setOption(name: string, value: any) {\n        this._options[name] = value;\n    }\n\n    getOption(name: string, defaultValue?: any) {\n        if (!this._options || this._options[name] === undefined) return defaultValue;\n\n        return this._options[name];\n    }\n\n    setParameter(name: string, value: any) {\n        this._parameters[name] = value;\n    }\n\n    getParameter(name: string, defaultValue?: any) {\n        if (!this._parameters || this._parameters[name] === undefined) {\n            return defaultValue;\n        }\n\n        return this._parameters[name];\n    }\n\n    clearParameters() {\n        this._parameters = {};\n    }\n\n    setTimeout(timeoutMillis: number) {\n        this.setOption(\"servertimeout\", timeoutMillis);\n    }\n\n    getTimeout(): number | undefined {\n        return this.getOption(\"servertimeout\");\n    }\n\n    setClientTimeout(timeoutMillis: number) {\n        this._clientTimeOut = timeoutMillis;\n    }\n\n    getClientTimeout() {\n        return this._clientTimeOut;\n    }\n\n    clearOptions() {\n        this._options = {};\n    }\n\n    /**\n     * @deprecated use the compliant toJSON() instead\n     */\n    toJson() {\n        return this.toJSON();\n    }\n\n    toJSON() {\n        const json: {\n            Options?: { [option: string]: any };\n            Parameters?: { [option: string]: any };\n        } = {};\n\n        if (Object.keys(this._options).length !== 0) {\n            json.Options = { ...this._options };\n            if (json.Options.servertimeout) {\n                json.Options.servertimeout = this._msToTimespan(json.Options.servertimeout as number);\n            }\n        }\n\n        if (Object.keys(this._parameters).length !== 0) {\n            json.Parameters = { ...this._parameters };\n        }\n\n        return Object.keys(json).length !== 0 ? json : null;\n    }\n\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    _msToTimespan(duration: number): string {\n        const milliseconds = duration % 1000;\n        const seconds = Math.floor((duration / 1000) % 60);\n        const minutes = Math.floor((duration / (1000 * 60)) % 60);\n        const hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n        const hoursStr = String(hours).padStart(2, \"0\");\n        const minutesStr = String(minutes).padStart(2, \"0\");\n        const secondsStr = String(seconds).padStart(2, \"0\");\n        const millisecondsStr = String(milliseconds).padStart(3, \"0\");\n\n        return `${hoursStr}:${minutesStr}:${secondsStr}.${millisecondsStr}`;\n    }\n\n    getHeaders(): Partial<KustoHeaders> {\n        const headers: Partial<KustoHeaders> = {};\n        if (this.clientRequestId) {\n            headers[\"x-ms-client-request-id\"] = this.clientRequestId;\n        }\n        if (this.user) {\n            headers[\"x-ms-user\"] = this.user;\n        }\n        if (this.application) {\n            headers[\"x-ms-app\"] = this.application;\n        }\n        headers[\"x-ms-version\"] = SDK_API_VERSION;\n        return headers;\n    }\n}\n\nexport default ClientRequestProperties;\n"]}