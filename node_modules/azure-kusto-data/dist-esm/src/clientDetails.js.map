{"version":3,"file":"clientDetails.js","sourceRoot":"","sources":["../../src/clientDetails.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNodeLike } from \"@azure/core-util\";\nimport { userInfo } from \"os\";\nimport { SDK_VERSION } from \"./version.js\";\n\n// eslint-disable-next-line @typescript-eslint/no-namespace,@typescript-eslint/no-unused-vars -- This is the correct way to augment the global namespace\ndeclare namespace NodeJS {\n    interface ProcessEnv {\n        npm_package_name?: string;\n        USERNAME?: string;\n        USERDOMAIN?: string;\n    }\n}\n\n// This regex allows all printable ascii, except spaces and chars we use in the format\nconst ReplaceRegex = /[^\\w.\\-()]/g;\nconst None = \"[none]\";\n\nexport class ClientDetails {\n    readonly versionForTracing: string;\n\n    constructor(\n        public applicationNameForTracing: string | null,\n        public userNameForTracing: string | null,\n    ) {\n        if (this.applicationNameForTracing === null) {\n            this.applicationNameForTracing = ClientDetails.defaultApplication();\n        }\n        if (this.userNameForTracing === null) {\n            this.userNameForTracing = ClientDetails.defaultUser();\n        }\n        this.versionForTracing = ClientDetails.defaultVersion();\n    }\n\n    static defaultApplication(): string {\n        if (isNodeLike) {\n            return process?.env?.npm_package_name || process?.argv[1] || None;\n        } else {\n            return window?.location?.href || None;\n        }\n    }\n\n    static defaultUser(): string {\n        if (isNodeLike) {\n            let username: string | undefined;\n            try {\n                username = userInfo().username;\n            } catch (err: any) {\n                /* Ignore possible errors like \"uv_os_get_passwd returned ENOMEM\" that may occur in some environments. */\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (err.info?.code !== \"ENOMEM\") {\n                    throw err;\n                }\n            }\n\n            return username || (process.env?.USERDOMAIN ? `${process.env?.USERDOMAIN}\\\\${process.env?.USERNAME}` : process?.env?.USERNAME) || None;\n        } else {\n            return None;\n        }\n    }\n\n    static defaultVersion(): string {\n        return this.formatHeader([\n            [\"Kusto.JavaScript.Client\", SDK_VERSION],\n            [\"Runtime.\" + (isNodeLike ? \"Node\" : \"Browser\"), (isNodeLike ? process.version : window?.navigator?.userAgent) || None],\n        ]);\n    }\n\n    static escapeHeader(header: string, wrapInBrackets: boolean = true): string {\n        const clean = header.substring(0, 100).replace(ReplaceRegex, \"_\");\n        return wrapInBrackets ? `{${clean}}` : clean;\n    }\n\n    static formatHeader(args: [string, string][]): string {\n        return args\n            .filter(([key, val]) => key && val)\n            .map(([key, val]) => `${key}:${this.escapeHeader(val)}`)\n            .join(\"|\");\n    }\n\n    static setConnectorDetails(\n        name: string,\n        version: string,\n        app_name: string | null = null,\n        app_version: string | null = null,\n        send_user: boolean = false,\n        override_user: string | null = null,\n        additional_fields: [string, string][] | null = null,\n    ): ClientDetails {\n        const params: [string, string][] = [[\"Kusto.\" + this.escapeHeader(name, false), version]];\n\n        app_name = app_name || this.defaultApplication();\n        app_version = app_version || None;\n\n        params.push([\"App.\" + this.escapeHeader(app_name), app_version]);\n        params.push(...(additional_fields || []));\n\n        let user = None;\n\n        if (send_user) {\n            user = override_user || this.defaultUser();\n        }\n\n        return new ClientDetails(this.formatHeader(params), user);\n    }\n\n    getHeaders(): Partial<KustoHeaders> {\n        return {\n            \"x-ms-client-version\": this.versionForTracing,\n            \"x-ms-app\": this.applicationNameForTracing,\n            \"x-ms-user\": this.userNameForTracing,\n        };\n    }\n}\n\nexport interface KustoHeaders {\n    \"x-ms-client-version\": string | null;\n    \"x-ms-app\": string | null;\n    \"x-ms-user\": string | null;\n    \"x-ms-client-request-id\": string | null;\n    \"x-ms-version\": string | null;\n}\n"]}