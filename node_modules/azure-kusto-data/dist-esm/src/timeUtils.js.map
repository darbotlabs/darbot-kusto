{"version":3,"file":"timeUtils.js","sourceRoot":"","sources":["../../src/timeUtils.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,MAAM,UAAU,cAAc,CAAC,KAAa,EAAE,OAAe,EAAE,OAAe;IAC1E,OAAO,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC;AAC7D,CAAC;AAED,oCAAoC;AACpC,MAAM,aAAa,GAAG,kDAAkD,CAAC;AAEzE,MAAM,UAAU,2BAA2B,CAAC,CAAgB;IACxD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,IAAI,KAAK,EAAE,CAAC;QACR,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,OAAO,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;IAC1F,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,CAAC;AAC/D,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function toMilliseconds(hours: number, minutes: number, seconds: number) {\n    return (hours * 60 * 60 + minutes * 60 + seconds) * 1000;\n}\n\n// Format: [+|-]d.hh:mm:ss[.fffffff]\nconst TimespanRegex = /^(-?)(?:(\\d+).)?(\\d{2}):(\\d{2}):(\\d{2}(\\.\\d+)?$)/;\n\nexport function parseKustoTimestampToMillis(t: string | null): number | null {\n    if (t == null || t === \"\") {\n        return null;\n    }\n    const match = TimespanRegex.exec(t);\n    if (match) {\n        const sign = match[1] === \"-\" ? -1 : 1;\n        const days = parseInt(match[2] || \"0\", 10);\n        const hours = parseInt(match[3], 10);\n        const minutes = parseInt(match[4], 10);\n        const seconds = parseFloat(match[5]);\n        return sign * 1000 * (days * 24 * 60 * 60 + hours * 60 * 60 + minutes * 60 + seconds);\n    }\n    throw new Error(`Timespan value '${t}' cannot be decoded`);\n}\n"]}